/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'CHOPPER' {
        ext.args = ''
        ext.args2 = "-q ${params.min_q_score} -l ${params.min_read_length}"
        publishDir = [
            path: { "${params.outdir}/QC/chopper" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: NANOPLOT {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/nanoplot" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'NEXTCLADE_DATASETGET ' {
        ext.args= 'hMPXV'
    }

    withName: 'NEXTCLADE' {
        publishDir = [ 
            path: { "${params.outdir}/nextclade" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'MINIMAP2_ALIGN' {
        ext.args = '-ax map-ont'
        publishDir = [
            path: { "${params.outdir}/$meta.id/minimap2" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'IVAR_TRIM'{
        ext.args = '-q 5 -e -m 100'
        publishDir = [
            path: { "${params.outdir}/$meta.id/ivar_trimmed" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'KRAKEN2_KRAKEN2'{
        publishDir = [
            path: { "${params.outdir}/kraken2" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'ACI'{
        publishDir = [
            path : { "${params.outdir}/QC/aci" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SAMTOOLS_STATS'{
        publishDir = [
            path : { "${params.outdir}/QC/samtools_stats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SAMTOOLS_COVERAGE'{
        publishDir = [
            path : { "${params.outdir}/QC/samtools_coverage" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SAMTOOLS_DEPTH'{
        publishDir = [
            path : { "${params.outdir}/QC/samtools_depth" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SAMTOOLS_FLAGSTAT'{
        publishDir = [
            path : { "${params.outdir}/QC/samtools_flagstat" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SAMTOOLS_AMPLICONSTATS' {
        ext.args   = '--max-amplicon-length 3000 --max-amplicons 3000'
        publishDir = [
            path : { "${params.outdir}/QC/ampliconstats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'IVAR_VARIANTS' {
        publishDir = [
            path : { "${params.outdir}/ivar_variant_calling" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'ACI' {
        publishDir = [
            path : { "${params.outdir}/$meta.id/aci" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'IVAR_CONSENSUS'{
        ext.args = ' '
        publishDir = [
            path : { "${params.outdir}/$meta.id/ivar_consensus" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'VADR'{
        ext.args = '--split --glsearch -s -r --nomisc --r_lowsimok --r_lowsimxd 100 --r_lowsimxl 2000 --alt_pass discontn,dupregin'
        ext.args2 = '/opt/vadr/vadr-models'
        ext.trim_args = '--minlen 50 --maxlen 210000'
        publishDir = [
            path : { "${params.outdir}/vadr" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'PHYLO'{
        publishDir = [
            path : { "${params.outdir}/phylogeny" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'PLOT' {
        ext.args = '-size 1200,900 -size2 1200,900 -size3 1200,900'
        publishDir = [
            path : { "${params.outdir}/QC/ampliconstats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'snpdists' {
        ext.args = '-c'
        publishDir = [
            path : { "${params.outdir}/phylogeny" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'iqtree2' {
        ext.args = '-ninit 2 -n 2 -me 0.05 -m GTR'
        publishDir = [
            path : { "${params.outdir}/phylogeny" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'heatcluster' {
        ext.args = '-t png'
        publishDir = [
            path : { "${params.outdir}/phylogeny" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'mafft' {
        ext.args = '--maxambiguous 0.5'
        publishDir = [
            path : { "${params.outdir}/phylogeny" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        }

}

